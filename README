Four dimensional minecraft thing!
OpenGL, GLSL and C++11ish.

Getting:
* Make sure you use --recursive on your clone command as this project uses submodules.
* If you already didn't do that, do this sequence:
** cd fourd
** git submodule init
** git submodule update
* If you don't need a submodule because you already have something installed, you can do them manually. You may avoid the submodulepocalype this way.

Running on Windows:
* open up the .sln in under ./project/, build, run

Running on Linux (haven't done this in a while, likely broken):
* make
* ./fourd

Controls UI:
w/s = forward/backward
a/d = strafe left/right
q/e = strafe up/down
r/f = inward/outward
t/g = roll left/right
y/h = rotate between inside right
u/j = rotate between inside up
i/k = animated pi/2 rotation between inside right (seems like miegakure button)
o/l = animated pi/2 rotation between inside up

Rendering UI:
0-9&* load different base shapes and different levels. (Default is quaxols in 4d.)
!-^) load different shaders and alpha/depth options
% loads settings for a nearly flat sliced w-projection
x/c Decrease/increase near w-plane
v/b Decrease/increase far w-plane
n/m Decrease/increase w-plane far/near ratio (alternative to FOV)
] toggles w-ortho and w-projection (w-ortho can also be set by far/near ratio=1)

Action UI (vague due to being in flux):
z adds some quaxols
Z adds some dynamic entites

Game TODOs:
* quaxol texturing, color
* better depth handling shader
** flat projection within w range, still with falloff?
** sub-surface w mode?
** multipass 
** more visualization attempts
** Alpha test cleaner clipping?
* cleanup rift positioning
* auto shape gen
* add simple creation/destruction tool
* quaxol chunking
* quaxol streaming
* collision shapes
* decent player movement
* Add 120 cell
* Load compressed textures with mipmaps directly
* Cleanup quaxol size/worldscale
* Simple game mode - miegakure style i/k button only + sliced projection?

QM/Physics TODOs:
* Add spin system
* Add lisp parser (ecl? clisp?)
* Add maxima
* lorentz transformation rendering?
* gr rendering?

General TODOs:
* Cleanup matrix math?
* Add text window with command entry
* Fix portability, CMake

Using a Makefile from Michael Crawford. Thanks!